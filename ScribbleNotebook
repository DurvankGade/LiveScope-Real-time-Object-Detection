{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<style>\n    body {\n            margin: 0;\n            height: 100vh;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            background-image: \n                url('https://as1.ftcdn.net/v2/jpg/05/68/42/84/1000_F_568428476_UuKjs74nkS6nZoIa2cTVUjxrFhbTJ7a0.jpg'), /* Background image */\n                radial-gradient(circle, rgba(255, 255, 255, 0.1), rgba(0, 0, 0, 0.5)); /* Light overlay */\n            background-size: cover; /* Cover the entire viewport */\n            background-position: center; /* Center the image */\n            font-family: 'Courier New', Courier, monospace; /* Retro font */\n            color: #fff; /* Default text color */\n            text-align: center; /* Centering text */\n            position: relative; /* For layering */\n        }\n\n        h1 {\n            color: #ffcc00; /* Bright yellow */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5); /* Text shadow for depth */\n            margin: 10px 0; /* Margin for spacing */\n        }\n\n        h2 {\n            color: #ff6699; /* Bright pink */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        h3 {\n            color: #66ffcc; /* Light teal */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        h4 {\n            color: #ff9966; /* Light orange */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        h5 {\n            color: #cc99ff; /* Light purple */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        h6 {\n            color: #ffcc66; /* Light yellow-orange */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        p {\n            color: #ffffff; /* White for paragraphs */\n            margin: 10px 20px; /* Margin for spacing */\n            text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5); /* Slight shadow for paragraphs */\n        }\n\n        .wrapper {\n            display: flex;\n            overflow-x: auto; /* Allow horizontal scrolling */\n            padding: 20px;\n            position: relative; /* For overlay positioning */\n            z-index: 2; /* Ensure cards are above the overlay */\n        }\n\n        .item {\n            position: relative;\n            margin: 0 10px;\n            transition: transform 0.3s ease; /* Smooth transition for scaling */\n        }\n\n        .item img {\n            width: 300px; /* Fixed width for images */\n            border-radius: 10px; /* Rounded corners */\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5); /* Shadow for depth */\n        }\n\n        .item:hover {\n            transform: scale(1.1); /* Scale up on hover */\n        }\n\n        /* Move adjacent items when one is hovered */\n        .item:hover ~ .item {\n            transform: translateX(20px); /* Push right */\n        }\n\n        .item:hover ~ .item:hover {\n            transform: translateX(0); /* Reset for hovered item */\n        }\n\n        .item:hover ~ .item:hover ~ .item {\n            transform: translateX(20px); /* Push right for next item */\n        }\n\n        .item:hover ~ .item:hover ~ .item:hover {\n            transform: translateX(0); /* Reset for hovered item */\n        }</style>\n<h1>LiveScope</h1>",
      "status": "",
      "output": "<style>\n    body {\n            margin: 0;\n            height: 100vh;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            background-image: \n                url('https://as1.ftcdn.net/v2/jpg/05/68/42/84/1000_F_568428476_UuKjs74nkS6nZoIa2cTVUjxrFhbTJ7a0.jpg'), /* Background image */\n                radial-gradient(circle, rgba(255, 255, 255, 0.1), rgba(0, 0, 0, 0.5)); /* Light overlay */\n            background-size: cover; /* Cover the entire viewport */\n            background-position: center; /* Center the image */\n            font-family: 'Courier New', Courier, monospace; /* Retro font */\n            color: #fff; /* Default text color */\n            text-align: center; /* Centering text */\n            position: relative; /* For layering */\n        }\n\n        h1 {\n            color: #ffcc00; /* Bright yellow */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5); /* Text shadow for depth */\n            margin: 10px 0; /* Margin for spacing */\n        }\n\n        h2 {\n            color: #ff6699; /* Bright pink */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        h3 {\n            color: #66ffcc; /* Light teal */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        h4 {\n            color: #ff9966; /* Light orange */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        h5 {\n            color: #cc99ff; /* Light purple */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        h6 {\n            color: #ffcc66; /* Light yellow-orange */\n            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n            margin: 10px 0;\n        }\n\n        p {\n            color: #ffffff; /* White for paragraphs */\n            margin: 10px 20px; /* Margin for spacing */\n            text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5); /* Slight shadow for paragraphs */\n        }\n\n        .wrapper {\n            display: flex;\n            overflow-x: auto; /* Allow horizontal scrolling */\n            padding: 20px;\n            position: relative; /* For overlay positioning */\n            z-index: 2; /* Ensure cards are above the overlay */\n        }\n\n        .item {\n            position: relative;\n            margin: 0 10px;\n            transition: transform 0.3s ease; /* Smooth transition for scaling */\n        }\n\n        .item img {\n            width: 300px; /* Fixed width for images */\n            border-radius: 10px; /* Rounded corners */\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5); /* Shadow for depth */\n        }\n\n        .item:hover {\n            transform: scale(1.1); /* Scale up on hover */\n        }\n\n        /* Move adjacent items when one is hovered */\n        .item:hover ~ .item {\n            transform: translateX(20px); /* Push right */\n        }\n\n        .item:hover ~ .item:hover {\n            transform: translateX(0); /* Reset for hovered item */\n        }\n\n        .item:hover ~ .item:hover ~ .item {\n            transform: translateX(20px); /* Push right for next item */\n        }\n\n        .item:hover ~ .item:hover ~ .item:hover {\n            transform: translateX(0); /* Reset for hovered item */\n        }</style>\n<h1>LiveScope</h1>",
      "type": ""
    },
    {
      "code": "<h5>Welcome to LiveScope, a cutting-edge project designed to perform real-time object detection and recognition using JavaScript and TensorFlow.js. This project leverages the power of machine learning to identify objects in videos, making it perfect for various applications like surveillance, autonomous vehicles, and more.<h5>",
      "status": "",
      "output": "<h5>Welcome to LiveScope, a cutting-edge project designed to perform real-time object detection and recognition using JavaScript and TensorFlow.js. This project leverages the power of machine learning to identify objects in videos, making it perfect for various applications like surveillance, autonomous vehicles, and more.</h5><h5></h5>",
      "type": "html"
    },
    {
      "code": "<h3>What we can do:</h3><h6>\n1.Real-Time Object Detection and Recognition using a video file<br>\n2.Attention Detection<br></h6>",
      "status": "",
      "output": "<h3>What we can do:</h3><h6>\n1.Real-Time Object Detection and Recognition using a video file<br>\n2.Attention Detection<br></h6>",
      "type": "html"
    },
    {
      "code": "<h3>1.Real-Time Object Detection and Recognition</h3>\n",
      "status": "",
      "output": "<h3>1.Real-Time Object Detection and Recognition</h3>\n",
      "type": "html"
    },
    {
      "code": "(async () => {\n  // Create a container for the output\n  const container = document.createElement('div');\n  container.style.display = 'flex';\n  container.style.flexDirection = 'column';\n  container.style.alignItems = 'center';\n  document.body.appendChild(container);\n\n  // Display the waiting message\n  const waitingMessage = document.createElement('p');\n  waitingMessage.innerText = 'Setting up... Please wait.';\n  container.appendChild(waitingMessage);\n\n  // Check if in sandbox mode\n  if(scrib.isSandboxed()) {\n    alert(\"Please take it out of sandbox by clicking the red button on top right corner\");\n    return;\n  }\n\n  // Dynamically load TensorFlow.js and the COCO-SSD model\n  const loadScript = (url) => {\n    return new Promise((resolve) => {\n      const script = document.createElement('script');\n      script.src = url;\n      script.onload = resolve;\n      script.onerror = (e) => reject(new Error(`Failed to load script: ${url}`));\n      document.head.appendChild(script);\n    });\n  };\n\n  // Load the libraries\n  await loadScript('https://cdn.jsdelivr.net/npm/@tensorflow/tfjs').catch(console.error);\n  await loadScript('https://cdn.jsdelivr.net/npm/@tensorflow-models/coco-ssd').catch(console.error);\n\n  // Setup video element for webcam\n  const video = document.createElement('video');\n  video.width = 640;\n  video.height = 480;\n  video.id = 'myVideo';\n  video.autoplay = true;\n  container.appendChild(video);\n\n  // Access the webcam\n  let stream;\n  navigator.mediaDevices.getUserMedia({ video: true })\n    .then((cameraStream) => {\n      stream = cameraStream;\n      video.srcObject = cameraStream;\n    })\n    .catch((error) => {\n      scrib.show('Error accessing camera:', error.message);\n    });\n\n  // Load the COCO-SSD model\n  const model = await cocoSsd.load().catch(console.error);\n\n  // Create a canvas for drawing\n  const canvas = document.createElement('canvas');\n  canvas.width = video.width;\n  canvas.height = video.height;\n  canvas.id = 'canvas';\n  container.appendChild(canvas);\n  const ctx = canvas.getContext('2d');\n\n  // Remove the waiting message and show the Analyze button\n  waitingMessage.style.display = 'none';\n\n  // Create an \"Analyze\" button\n  const analyzeButton = document.createElement('button');\n  analyzeButton.innerText = 'Analyze';\n  container.insertBefore(analyzeButton, video);\n\n  // Detect objects and draw bounding boxes\n  async function detectObjects() {\n    if (video.readyState === 4) { // Ensure video is ready\n      try {\n        const predictions = await model.detect(video);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        predictions.forEach(prediction => {\n          ctx.beginPath();\n          ctx.rect(...prediction.bbox);\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = 'red';\n          ctx.fillStyle = 'red';\n          ctx.stroke();\n          ctx.fillText(\n            `${prediction.class} - ${Math.round(prediction.score * 100)}%`,\n            prediction.bbox[0],\n            prediction.bbox[1] > 10 ? prediction.bbox[1] - 5 : 10\n          );\n        });\n      } catch (error) {\n        console.error(\"Detection error: \", error);\n      }\n    }\n    requestAnimationFrame(detectObjects);\n  }\n\n  // Start real-time object detection when \"Analyze\" button is clicked\n  analyzeButton.onclick = () => {\n    detectObjects();\n    console.log(\"Analyze button clicked, starting real-time detection\");\n  };\n})();\n",
      "status": "[1]<br><span style=\"font-size:8px\">3.459s<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}